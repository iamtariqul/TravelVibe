rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // User data - only accessible by that user
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // LISTINGS - IMPORTANT FIX HERE
    match /listings/{listingId} {
      // TEMPORARY FIX: Allow all authenticated users to read any listing
      // This is less secure but fixes immediate permission errors
      allow read: if request.auth != null;
      
      // Only the host can create, update or delete listings
      allow create: if request.auth != null && request.auth.uid == request.resource.data.hostId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.hostId;
    }
    
    // Reviews - public read, controlled write
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // BOOKINGS - IMPORTANT FIX HERE
    match /bookings/{bookingId} {
      // TEMPORARY FIX: Allow all authenticated users to read their bookings
      // This is less secure but fixes immediate permission errors
      allow read: if request.auth != null;
      
      allow create: if request.auth != null && request.auth.uid == request.resource.data.guestId;
      allow update: if request.auth != null && 
                    (request.auth.uid == resource.data.guestId || 
                     request.auth.uid == resource.data.hostId);
    }
  }
}
